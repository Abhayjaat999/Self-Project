{
	"info": {
		"_postman_id": "568d7c41-71ad-4e36-9ba5-c4543fa33f19",
		"name": "Blog-management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Author APIs",
			"item": [
				{
					"name": "Create author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"User registration has a correctsuccessful response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(true);",
									"    pm.expect(jsonData.data).exist;",
									"    console.log(pm.response.json().data._id)",
									"});",
									"",
									"pm.collectionVariables.set(\"author_id\", pm.response.json().data._id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fname\":\"Pikachu\",\n    \"lname\":\"Pikachu\",\n    \"title\":\"Mr\",\n    \"email\":\"pikapika@gmail.com\",\n    \"password\":\"pass12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/authors",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Author login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    try {",
									"        pm.response.to.have.status(201);",
									"    } catch (e) {",
									"        pm.response.to.have.status(200);",
									"    }",
									"});",
									"pm.test(\"User login has a correct successful response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(true);",
									"    pm.expect(jsonData.data).exist;",
									"    console.log(pm.response.json().data.token)",
									"});",
									"",
									"pm.collectionVariables.set(\"author_token\", pm.response.json().data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"jd@gmail.com\",\n    \"password\":\"pass1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Blog APIs",
			"item": [
				{
					"name": "Create a blog",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Blog Creation has a correct successful response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(true);",
									"    pm.expect(jsonData.data).exist;",
									"});",
									"",
									"pm.collectionVariables.set(\"blog_id\", pm.response.json().data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{author_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n\t\"title\": \"Best sci-fi movies of the year\", \n\t\"body\": \"blah blah\", \n\t\"authorId\": \"{{author_id}}\", \n\t\"tags\": [\"movies\"], \n\t\"category\": \"entertainment\", \n    \"isPublished\": true,\n\t\"subcategory\": [\"aliens\"]\n}\n\t",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/blogs",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"blogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get blogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Blog fetch is successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(true);",
									"    pm.expect(jsonData.data).exist;",
									"    pm.expect(jsonData.data).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{author_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/blogs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"blogs"
							],
							"query": [
								{
									"key": "authorId",
									"value": "{{author_id}}",
									"disabled": true
								},
								{
									"key": "category",
									"value": "entertainment",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "technology",
									"disabled": true
								},
								{
									"key": "subcategory",
									"value": "web development",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a blog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Blog update is successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(true);",
									"    pm.expect(jsonData.message).exist;",
									"    pm.expect(jsonData.data).exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{author_token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"isPublished\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/blogs/{{blog_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"blogs",
								"{{blog_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a blog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Blog deletion is successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(true);",
									"    pm.expect(jsonData.message).not.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{author_token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "localhost:3000/blogs/{{blog_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"blogs",
								"{{blog_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete blogs by filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Blog deletion is successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(true);",
									"    pm.expect(jsonData.message).not.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{author_token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "localhost:3000/blogs",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"blogs"
							],
							"query": [
								{
									"key": "tags",
									"value": "technology",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "user_token",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "variable_key",
			"value": ""
		},
		{
			"key": "new_user_id",
			"value": ""
		},
		{
			"key": "book_id",
			"value": ""
		},
		{
			"key": "review_id",
			"value": ""
		},
		{
			"key": "author_id",
			"value": ""
		},
		{
			"key": "author_token",
			"value": ""
		},
		{
			"key": "blog_id",
			"value": ""
		}
	]
}